<?php
/**
 * Created by PhpStorm.
 * User: js
 * Date: 2019-03-05
 * Time: 00:06
 */

define('__SLOWALK__', drupal_get_path('module', 'slowalk'));
require_once __SLOWALK__ . '/include/slowalk.variable.inc';

/**
 * Implements hook_menu().
 */
function slowalk_menu()
{
    $items['admin/webzine'] = array(
        'title' => '유지관리',
        'description' => '웹진 어드민 페이지입니다',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('wz_main_callback'),
        'access arguments' => array('access administrator webzine'),
        'file' => 'include/main.php'
    );

    $items['admin/webzine/mainpage-settings'] = array(
        'title' => '메인 페이지 설정',
        'description' => '메인 페이지 구성 요소를 설정할 수 있습니다',
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 0
    );

    $items['admin/webzine/slide'] = array(
        'title' => '메인 슬라이드',
        'description' => '메인페이지 슬라이드 설정 페이지입니다.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('wz_slide_callback'),
        'access arguments' => array('access administrator webzine'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1,
        'file' => 'include/slide.php'
    );

    $items['ajax/webzine'] = array(
        'title' => 'Ajax',
        'description' => '',
        'page callback' => 'webzine_ajax_callback',
        'access arguments' => array('access webzine ajax'),
        'type' => MENU_CALLBACK,
        'file' => 'slowalk_ajax.php'
    );

    $items['comfort-women'] = [
      'title' => 'Japanese Military “Comfort Women”',
      'description' => 'Japanese Military “Comfort Women”',
      'page callback' => 'webzine_page_view',
      'page arguments' => ['comfort_women'],
      'access arguments' => ['access content'],
      'type' => MENU_CALLBACK
    ];

    $items['rimss'] = [
      'title' => 'RIMSS',
      'description' => 'RIMSS',
      'page callback' => 'webzine_page_view',
      'page arguments' => ['rimss'],
      'access arguments' => ['access content'],
      'type' => MENU_CALLBACK
    ];

    $items['kyeol'] = [
      'title' => 'Webzine KYEOL',
      'description' => 'Webzine KYEOL',
      'page callback' => 'webzine_page_view',
      'page arguments' => ['kyeol'],
      'access arguments' => ['access content'],
      'type' => MENU_CALLBACK
    ];

    $items['newsletters'] = [
      'title' => '뉴스레터',
      'description' => '뉴스레터',
      'page callback' => 'webzine_page_view',
      'page arguments' => ['newsletters'],
      'access arguments' => ['access content'],
      'type' => MENU_CALLBACK
    ];

    return $items;
}

/**
 * Implements hook_permission().
 */
function slowalk_permission()
{
  return [
    'access webzine ajax' => [
      'title' => 'Webzine Ajax',
      'description' => 'Webzine Ajax access role.',
    ],
    'access administrator webzine' => [
      'title' => 'Webzine Administor',
      'description' => 'Webzine administor page access role.',
    ]
  ];
}

/**
 * Implements hook_theme().
 */
function slowalk_theme($existing, $type, $theme, $path) {
  global $base_url;
  $pages = [ 'comfort_women', 'rimss', 'kyeol', 'newsletters' ];
  $themes = [];
  $data = [];
  foreach ($pages as $page) {
    if($page == 'newsletters') {
      $yaml = dirname(__FILE__) . '/templates/newsletters.yml';
      $data['newsletters'] = yaml_parse_file($yaml);
    }
    $themes[$page] = [
      'path' => drupal_get_path('module', 'slowalk') . '/templates',
      'template' => $page,
      'variables' => ['data' => $data ]
    ];
  }
  $themes['share_links'] = [
    'template' => 'share_links',
    'variables' => [ 'data' => $data ],
  ];
  return $themes;
}

/**
 * @param $tid
 */
function back_issues_date($tid)
{
    $query = new EntityFieldQuery();
    $result = $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'article')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_vol', 'tid', $tid)
        ->fieldOrderBy('field_category', 'tid', 'ASC')
        ->propertyOrderBy('created', 'DESC')
        ->range(0,1)
        ->execute();
    if(isset($result['node'])) {
        $nids = array_keys($result['node']);
        $nodes = entity_load('node', $nids);
        $node = array_shift($nodes);
        return format_date($node->created, 'custom', 'Y.m.d');
    }
}

function _slowalk_search($view_name, $display_id, $key)
{
    $search = views_get_view($view_name);
    $search->set_display($display_id);
    $filter = $search->get_item($display_id, 'filter', 'search_api_views_fulltext');
    $filter['value'] = $key;
    $search->set_item('page', 'filter', 'search_api_views_fulltext', $filter);
    $search->pre_execute();
    $search->execute();
    return $search->total_rows;
}

/**
 * Implements hook_preprocess_page().
 */
function slowalk_preprocess_page(&$variables)
{
  if(isset($variables['node']) && $variables['node']->type === 'article') {
    drupal_add_js(__SLOWALK__ . '/js/cavacnotify.js', array('type' => 'file', 'scope' => 'footer', 'group' => JS_THEME));
  }
}

/**
 * Implements hook_captain().
 *
 * pirate filter를 사용하는 경우 노드 본문의 텍스트 중 전문용어를 발견하면
 * 실제로는 pirate filter가 치환합니다.
 *
 */
function slowalk_captain($patterns) {
  $terms = get_terminology_terms();
  $terms_patterns = [];
  foreach ($terms as $tid => $term) {
    $pattern = '/' . $term['name'] . '/u';
    $text = str_replace('"', "´", str_replace("'", "´", $term['text']));
    $name = str_replace('"', "´", str_replace("'", "´", $term['name']));
    $terms_patterns[$pattern] = ' <span class="cavacnotify"';
    $terms_patterns[$pattern] .= ' popuptext="' . $text . '"';
    $terms_patterns[$pattern] .= ' popuptitle="' . $name . '"';
    $terms_patterns[$pattern] .= ' data-url="' . $term['url'] . '"';
    $terms_patterns[$pattern] .= '>' . $term['name'] . '</span>';
  }
  return $terms_patterns;
}

/**
 * 전체 전문용어 배열 반환
 */
function get_terminology_terms() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('terms');
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
  $data = [];
  foreach ($terms as $tid => $term) {
    $data[$tid] = [
      'name' => htmlspecialchars($term->name),
      'text' => strip_tags(str_replace("\r\n","",$term->description)),
      'url' => '/taxonomy/term/' . $tid
    ];
  }
  return $data;
}

/**
 * Implements hook_node_view().
 */
function slowalk_node_view($node, $view_mode, $langcode) {
  if($node->type == 'article' && $view_mode == 'full') {
    // dpm($node);
  }
}

/**
 * Implements hook_node_presave().
 */
function slowalk_node_presave($node) {
  if($node->type == 'article') {
    $terms = get_terminology_terms();
    $field_body = field_get_items('node', $node, 'body');
    $body = strip_tags(str_replace(["\r" , "\n", '&nbsp;'], '', $field_body[0]['value']));
    $matched_tids = [];
    foreach ($terms as $tid => $term) {
      if(strpos($body, $term['name']) !== FALSE) {
        $matched_tids[] = ['tid' => $tid];
      }
    }
    $node->field_terminology[LANGUAGE_NONE] = $matched_tids;
  }
}

function webzine_page_view($id) {
  return [ 'content' => [ '#theme' => $id ] ];
}

/**
* Implements hook_entity_info_alter().
*/
function slowalk_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['teaser_en'] = [
    'label' => t('Teaser for english'),
    'custom settings' => TRUE,
  ];
}
